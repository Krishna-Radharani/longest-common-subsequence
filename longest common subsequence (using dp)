class Solution {
public:
    int recursion(int index1,int index2,string text1,string text2,vector<vector<int>>&dp){
        //base case
        if(index1 <0 || index2<0) return 0;
        if(dp[index1][index2]!=-1) return dp[index1][index2];
        if(text1[index1]==text2[index2]){
        return dp[index1][index2]=1+recursion(index1-1,index2-1,text1,text2,dp);
        }
        return dp[index1][index2]=max(recursion(index1-1,index2,text1,text2,dp),recursion(index1,index2-1,text1,text2,dp));
        
    }
    int longestCommonSubsequence(string text1, string text2) {
        vector<vector<int>>dp(text1.length(),vector<int>(text2.length(),-1));
        return recursion(text1.length()-1,text2.length()-1,text1,text2,dp);
              
        
    }
};
